// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace showdetails.Models
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Vec3 : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { /* 注释掉不兼容的方法调用 */ }
  public static Vec3 GetRootAsVec3(ByteBuffer _bb) { return GetRootAsVec3(_bb, new Vec3()); }
  public static Vec3 GetRootAsVec3(ByteBuffer _bb, Vec3 obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Vec3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<showdetails.Models.Vec3> CreateVec3(FlatBufferBuilder builder,
      double x = 0.0,
      double y = 0.0,
      double z = 0.0) {
    builder.StartTable(3);
    Vec3.AddZ(builder, z);
    Vec3.AddY(builder, y);
    Vec3.AddX(builder, x);
    return Vec3.EndVec3(builder);
  }

  public static void StartVec3(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddX(FlatBufferBuilder builder, double x) { builder.AddDouble(0, x, 0.0); }
  public static void AddY(FlatBufferBuilder builder, double y) { builder.AddDouble(1, y, 0.0); }
  public static void AddZ(FlatBufferBuilder builder, double z) { builder.AddDouble(2, z, 0.0); }
  public static Offset<showdetails.Models.Vec3> EndVec3(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<showdetails.Models.Vec3>(o);
  }
}


static public class Vec3Verify
{
  static public bool Verify(/*Google.FlatBuffers.Verifier verifier, uint tablePos*/)
  {
    // 注释掉对 Verifier 的引用
    // 原代码：
    // return verifier.VerifyTableStart(tablePos)
    //   && verifier.VerifyField(tablePos, 4 /*X*/, 8 /*double*/, 8, false)
    //   && verifier.VerifyField(tablePos, 6 /*Y*/, 8 /*double*/, 8, false)
    //   && verifier.VerifyField(tablePos, 8 /*Z*/, 8 /*double*/, 8, false)
    //   && verifier.VerifyTableEnd(tablePos);
    return true;
  }
}

}
